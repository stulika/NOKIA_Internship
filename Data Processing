
## 🧠 **Faulty Component Prediction Using Category Mappings**

This folder includes categorized repair descriptions and mapped component histories to identify the **most likely faulty component** based on user-input **Fail IDs**.


## 📁 **Files Used**

### ✅ `categories_complete.json`

* **Purpose:** Maps **Fail ID strings** (e.g., `ID-25`) to their respective **category names** (e.g., `BBOX1.1`)
* **Example:**

  ```json
  "BBOX1.1": {
    "Description": "FAIL - ID-25 BBOX FILE CHECK TEST FID16",
    "ids": [
      "ID-25"
    ]
  }
  ```


### ✅ `grouping.json`

* **Purpose:** Maps **category names** to all **CompIDs** (component locations) where that category historically led to replacement

* **Supports:** Many-to-many mapping
  *(One category → Multiple CompIDs)*

* **Example:**

  ```json
  "V13010": [
    "5.1_17-20",
    "5_17,18,19,20",
    "BBOX1.1",
    "NCU4.1_27",
    "NCU4.3_27_28",
    "NCU4.6_27",
    "sanity7.2",
    "sanity7.3"
  ]
  ```



## 🔍 **How the Prediction Works**

1. **🔧 User Input:**
   A repair engineer inputs a **Fail ID** (e.g., `ID-25`)

2. **📂 Category Lookup:**
   The system looks up the ID in `categories_complete.json` to find the associated **category** (e.g., `BBOX1.1`)

3. **📌 Component Mapping:**
   It then searches for `BBOX1.1` in `grouping.json` and retrieves all associated **CompIDs**

4. **📊 Frequency Count:**
   Using the **Excel dataset** of historical repairs, the system counts how many times each **CompID** was actually replaced for that category

5. **✅ Prediction Output:**
   The **most frequently replaced CompID** is returned as the predicted faulty component


## ⚡ TL;DR

* Categories are **manually curated** from raw repair descriptions and grouped under logical labels like `BBOX1.1`, `NCU4.2`, etc.
* A **single CompID** may be associated with **multiple categories**
* These JSON files serve as the foundation for a **transparent, rule-based prediction system**

---

